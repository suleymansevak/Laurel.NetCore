{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\suleyman.sevak\\\\Desktop\\\\YEDEK\\\\React\\\\REACT Project\\\\LaurelReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\suleyman.sevak\\\\Desktop\\\\YEDEK\\\\React\\\\REACT Project\\\\LaurelReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nexport function getRequest(_x) {\n  return _getRequest.apply(this, arguments);\n}\n\nfunction _getRequest() {\n  _getRequest = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(url) {\n    var config, incomingResponse;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            config = {\n              headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n              }\n            };\n            debugger;\n            _context.next = 4;\n            return fetch(url, config);\n\n          case 4:\n            incomingResponse = _context.sent;\n            _context.next = 7;\n            return incomingResponse.json();\n\n          case 7:\n            incomingResponse = _context.sent;\n            incomingResponse = incomingResponse.customerList;\n            return _context.abrupt(\"return\", incomingResponse);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _getRequest.apply(this, arguments);\n}","map":{"version":3,"sources":["C:\\Users\\suleyman.sevak\\Desktop\\YEDEK\\React\\REACT Project\\LaurelReact\\src\\Utils\\ServiceUtils.js"],"names":["getRequest","url","config","headers","fetch","incomingResponse","json","customerList"],"mappings":";;AAAA,gBAAsBA,UAAtB;AAAA;AAAA;;;;;2BAAO,iBAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAECC,YAAAA,MAFD,GAEU;AACTC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,0BAAU,kBAFL;AAGL,+CAA+B;AAH1B;AADA,aAFV;AASH;AATG;AAAA,mBAW0BC,KAAK,CAACH,GAAD,EAAMC,MAAN,CAX/B;;AAAA;AAWCG,YAAAA,gBAXD;AAAA;AAAA,mBAY0BA,gBAAgB,CAACC,IAAjB,EAZ1B;;AAAA;AAYCD,YAAAA,gBAZD;AAaCA,YAAAA,gBAAgB,GAAGA,gBAAgB,CAACE,YAApC;AAbD,6CAcQF,gBAdR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export async function getRequest(url) {\r\n    \r\n    var config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Access-Control-Allow-Origin': '*'\r\n        },\r\n    };\r\n    debugger;\r\n   \r\n    let incomingResponse = await fetch(url, config);\r\n        incomingResponse = await incomingResponse.json();\r\n        incomingResponse = incomingResponse.customerList;\r\n        return incomingResponse;\r\n\r\n}"]},"metadata":{},"sourceType":"module"}