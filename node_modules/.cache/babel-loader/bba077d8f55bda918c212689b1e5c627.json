{"ast":null,"code":"/**\n * Parses a datetime (ex: 01/01/1990 17:40:30) given a format (ex: DD/MM/YYYY HH:mm:ss)\n * Nowadays, this parsers supports:\n * - MM   = 01..12\tMonth number\n * - DD   = 01..31\tDay of month\n * - YYYY = 4 or 2 digit year (ex= 2018)\n * - YY   = 2 digit year (ex= 18)\n * - HH   = 0..23\tHours (24 hour time)\n * - hh   = 1..12\tHours (12 hour time used with a A.)\n * - kk   = 1..24\tHours (24 hour time from 1 to 24)\n * - aa   = m pm\tPost or ante meridiem (Note the one character a p are also considered valid)\n * - mm   = 0..59\tMinutes\n * - ss   = 0..59\tSeconds\n*/\nexports.parseStringDate = function (input, format) {\n  if (input.length !== format.length) {\n    return null;\n  }\n\n  var componentsOfFormatFromInput = format.split('').reduce(function (acc, curr, index) {\n    acc[curr] = \"\".concat(acc[curr] || '').concat(input[index]);\n    return acc;\n  }, {}); // parse each component of format to a dateComponent (year, monthIndex etc...)\n  // in order to build a Date object\n\n  var dateComponents = validChars.reduce(function (acc, curr) {\n    acc[curr] = strToDateComponent[curr](componentsOfFormatFromInput[curr]);\n    return acc;\n  }, {});\n\n  if (Object.values(dateComponents).some(function (component) {\n    return component === null;\n  })) {\n    return null;\n  }\n\n  var year = dateComponents['Y'];\n  var monthIndex = dateComponents['M'];\n  var day = dateComponents['D'];\n  var hours = dateComponents['h'] && dateComponents['a'] ? dateComponents['h'] + (dateComponents['a'] === AMPM.PM ? 12 : 0) : dateComponents['H'];\n  var minutes = dateComponents['m'];\n  var seconds = dateComponents['s'];\n  var date = new Date(year, monthIndex, day, hours, minutes, seconds);\n  return date;\n}; ////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nvar validChars = ['Y', 'M', 'D', 'H', 'h', 'a', 'm', 's'];\nvar AMPM = {\n  AM: 0,\n  PM: 1\n};\nvar now = new Date();\nvar strToDateComponent = {\n  Y: function Y(str) {\n    return str ? Number(str) : now.getYear();\n  },\n  M: function M(str) {\n    var month = str ? Number(str) - 1 : now.getMonth();\n    return month >= 0 && month <= 11 ? month : null;\n  },\n  D: function D(str) {\n    return str ? Number(str) : now.getDay();\n  },\n  H: function H(str) {\n    var hour = str ? Number(str) : now.getHours();\n    return hour >= 0 && hour <= 23 ? hour : null;\n  },\n  h: function h(str) {\n    var hour = str ? Number(str) : now.getHours() % 12;\n    return hour >= 0 && hour <= 12 ? hour : null;\n  },\n  a: function a(str) {\n    if (!str) return undefined;\n\n    if (str.toLowerCase() === 'am') {\n      return AMPM.AM;\n    } else if (str.toLowerCase() === 'pm') {\n      return AMPM.PM;\n    } else {\n      return null;\n    }\n  },\n  m: function m(str) {\n    var minute = str ? Number(str) : now.getMinutes();\n    return minute >= 1 && minute <= 59 ? minute : null;\n  },\n  s: function s(str) {\n    var second = str ? Number(str) : now.getSeconds();\n    return second >= 1 && second <= 59 ? second : null;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}