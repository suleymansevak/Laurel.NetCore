{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\suleyman.sevak\\\\Desktop\\\\YEDEK\\\\React\\\\REACT Project\\\\LaurelReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\suleyman.sevak\\\\Desktop\\\\YEDEK\\\\React\\\\REACT Project\\\\LaurelReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport Axios from \"axios\"; // Token gidip  gelince var  ikinci kez gidince  yok --------------------------------------------------\n\nexport function getRequest(_x) {\n  return _getRequest.apply(this, arguments);\n}\n\nfunction _getRequest() {\n  _getRequest = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(url) {\n    var token, config, incomingResponse;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = localStorage.getItem('token');\n            config = {\n              headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*',\n                'Authorization': token\n              }\n            };\n            _context.next = 4;\n            return fetch(url, config);\n\n          case 4:\n            incomingResponse = _context.sent;\n            debugger; // localStorage.setItem('token',incomingResponse.token)\n\n            if (!(incomingResponse.status === 401)) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", incomingResponse);\n\n          case 8:\n            _context.next = 10;\n            return incomingResponse.json();\n\n          case 10:\n            incomingResponse = _context.sent;\n            return _context.abrupt(\"return\", incomingResponse);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _getRequest.apply(this, arguments);\n}\n\nexport function postRequest(_x2, _x3) {\n  return _postRequest.apply(this, arguments);\n}\n\nfunction _postRequest() {\n  _postRequest = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(url, data) {\n    var token, config, incommingResponse;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            token = localStorage.getItem('token');\n            config = {\n              headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*',\n                'Authorization': token\n              }\n            };\n            debugger;\n            _context2.next = 5;\n            return Axios.post(url, data, config);\n\n          case 5:\n            incommingResponse = _context2.sent;\n            Axios.interceptors.request.use(function (response) {\n              debugger;\n\n              if (incommingResponse.status === 401) {\n                return incommingResponse;\n              }\n\n              return response;\n            }); // if (localStorage.getItem('token') === null){\n            //     localStorage.setItem('token', incommingResponse.token)\n            // }\n\n            localStorage.setItem('token', incommingResponse.token);\n            debugger;\n            return _context2.abrupt(\"return\", incommingResponse.data);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _postRequest.apply(this, arguments);\n}","map":{"version":3,"sources":["C:\\Users\\suleyman.sevak\\Desktop\\YEDEK\\React\\REACT Project\\LaurelReact\\src\\Utils\\ServiceUtils.js"],"names":["Axios","getRequest","url","token","localStorage","getItem","config","headers","fetch","incomingResponse","status","json","postRequest","data","post","incommingResponse","interceptors","request","use","response","setItem"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAGA,gBAAsBC,UAAtB;AAAA;AAAA;;;;;2BAAO,iBAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,KADD,GACSC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADT;AAECC,YAAAA,MAFD,GAEU;AACTC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,0BAAU,kBAFL;AAGL,+CAA+B,GAH1B;AAIL,iCAAiBJ;AAJZ;AADA,aAFV;AAAA;AAAA,mBAY0BK,KAAK,CAACN,GAAD,EAAMI,MAAN,CAZ/B;;AAAA;AAYCG,YAAAA,gBAZD;AAaH,qBAbG,CAcH;;AAdG,kBAeCA,gBAAgB,CAACC,MAAjB,KAA4B,GAf7B;AAAA;AAAA;AAAA;;AAAA,6CAgBQD,gBAhBR;;AAAA;AAAA;AAAA,mBAkBsBA,gBAAgB,CAACE,IAAjB,EAlBtB;;AAAA;AAkBHF,YAAAA,gBAlBG;AAAA,6CAmBIA,gBAnBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAyBP,gBAAsBG,WAAtB;AAAA;AAAA;;;;;2BAAO,kBAA2BV,GAA3B,EAAgCW,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCV,YAAAA,KADD,GACSC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADT;AAECC,YAAAA,MAFD,GAEU;AACTC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,0BAAU,kBAFL;AAGL,+CAA+B,GAH1B;AAIL,iCAAiBJ;AAJZ;AADA,aAFV;AAUH;AAVG;AAAA,mBAW2BH,KAAK,CAACc,IAAN,CAAWZ,GAAX,EAAgBW,IAAhB,EAAsBP,MAAtB,CAX3B;;AAAA;AAWCS,YAAAA,iBAXD;AAYHf,YAAAA,KAAK,CAACgB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgC,UAAAC,QAAQ,EAAE;AAEtC;;AACA,kBAAIJ,iBAAiB,CAACL,MAAlB,KAA6B,GAAjC,EAAsC;AAClC,uBAAOK,iBAAP;AACH;;AACD,qBAAOI,QAAP;AACH,aAPD,EAZG,CAqBH;AACA;AACA;;AACAf,YAAAA,YAAY,CAACgB,OAAb,CAAqB,OAArB,EAA8BL,iBAAiB,CAACZ,KAAhD;AACA;AAzBG,8CA0BIY,iBAAiB,CAACF,IA1BtB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["\r\nimport Axios from \"axios\";\r\n\r\n// Token gidip  gelince var  ikinci kez gidince  yok --------------------------------------------------\r\n\r\n\r\nexport async function getRequest(url) {\r\n    let token = localStorage.getItem('token');\r\n    var config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': token\r\n        },\r\n    };\r\n\r\n\r\n    let incomingResponse = await fetch(url, config);\r\n    debugger;\r\n    // localStorage.setItem('token',incomingResponse.token)\r\n    if (incomingResponse.status === 401) {\r\n        return incomingResponse;\r\n    }\r\n    incomingResponse = await incomingResponse.json();\r\n    return incomingResponse;\r\n\r\n\r\n}\r\n\r\n\r\nexport async function postRequest(url, data) {\r\n    let token = localStorage.getItem('token');\r\n    var config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': token\r\n        },\r\n    };\r\n    debugger;\r\n    let incommingResponse = await Axios.post(url, data, config);\r\n    Axios.interceptors.request.use( response=>{\r\n\r\n        debugger;\r\n        if (incommingResponse.status === 401) {\r\n            return incommingResponse;\r\n        }\r\n        return response;\r\n    })\r\n    \r\n    // if (localStorage.getItem('token') === null){\r\n    //     localStorage.setItem('token', incommingResponse.token)\r\n    // }\r\n    localStorage.setItem('token', incommingResponse.token)\r\n    debugger;\r\n    return incommingResponse.data;\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}